//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
buildscript {
	dependencies {
		classpath "com.modrinth.minotaur:Minotaur:${libs.versions.minotaur.get()}"
		classpath "com.github.breadmoirai:github-release:${libs.versions.githubRelease.get()}"
	}
}


plugins {
	id 'maven-publish'
	alias libs.plugins.loom
}

version = "$project.baseVersion+$project.branch"
archivesBaseName = project.name
group = 'folk.sisby'

repositories {
	mavenLocal()
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.cafeteria.dev/releases" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://maven.wispforest.io" }
	maven { url "https://maven.shedaniel.me/" } // Cloth Config
	maven { url 'https://jitpack.io' }
	maven { url 'https://repo.sleeping.town/' }
}

dependencies {
	// // Base // //
	minecraft libs.mc
	mappings variantOf(libs.yarn) { classifier "v2" }
	modImplementation libs.fl
	modImplementation libs.fapi

	modImplementation libs.surveyor
	modCompileOnly(libs.fwaystones) {
		exclude module: 'journeymap-32274'
		exclude module: 'journeymap-api'
	}
	modCompileOnly libs.blaystones
	modCompileOnly libs.balm
	modRuntimeOnly libs.kaleidoConfig
}

processResources {
	final Map<String, String> map = [
		"version"   : version.toString(),
		"mc"        : libs.versions.mc.get(),
		"fl"        : libs.versions.fl.get(),
		"fapi"      : libs.versions.fapi.get(),
		"surveyor"  : libs.versions.surveyor.get(),
		"fwaystones": libs.versions.fwaystones.get(),
		"blaystones": libs.versions.blaystones.get(),
	]

	inputs.properties(map)
	filesMatching('*.mod.json') { expand(map) }
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE.txt") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}

if (System.getenv("MODRINTH_TOKEN")) {
	apply plugin: "com.modrinth.minotaur"
	modrinth {
		token = System.getenv("MODRINTH_TOKEN")
		projectId = 'surveystones'
		versionNumber = project.version
		versionName = baseVersion
		versionType = 'release'
		uploadFile = remapJar
		gameVersions = ["1.20.1"]
		loaders = ['quilt', 'fabric', 'forge']
		detectLoaders = false
		dependencies {
			required.version libs.fapi.get().getName(), libs.versions.fapi.get()
			required.version libs.surveyor.get().getName(), libs.versions.surveyor.get()
			required.version libs.fwaystones.get().getName(), libs.versions.fwaystones.get()
		}
		changelog = rootProject.file("CHANGELOG.md").text + "\n\nChangelog: https://github.com/sisby-folk/surveystones/releases/tag/v$baseVersion"
		syncBodyFrom = rootProject.file("README.md").text
	}
}

if (System.getenv("GITHUB_TOKEN")) {
	apply plugin: "com.github.breadmoirai.github-release"
	githubRelease {
		token System.getenv("GITHUB_TOKEN")
		owner "sisby-folk"
		repo "surveystones"
		tagName "v$baseVersion"
		releaseName baseVersion
		targetCommitish defaultBranch
		draft false
		prerelease false
		releaseAssets remapJar.archiveFile
		allowUploadToExisting true
		generateReleaseNotes true
		body rootProject.file("CHANGELOG.md").text
	}
	tasks.githubRelease.dependsOn remapJar
}

if (System.getenv("MODRINTH_TOKEN") && System.getenv("GITHUB_TOKEN")) {
	tasks.register("fullRelease") {
		group "publishing"
		dependsOn "githubRelease"
		dependsOn "modrinth"
	}
}
